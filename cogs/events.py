import logging
from datetime import datetime
from itertools import cycle

import discord
from discord.ext import commands, tasks

import database as db
from models.modMember import get_mod_member


class Events(commands.Cog):
    WELCOME_CHANNEL = "üì¢annonces"

    def __init__(self, bot):
        self.bot = bot
        self.status = cycle(
            [
                discord.Streaming(
                    name="de l'algorithmique",
                    url="http://www.france-ioi.org/algo/chapters.php",
                ),
                discord.Game(name=f"{bot.command_prefix}help"),
            ]
        )

    @tasks.loop(seconds=5)
    async def change_status(self):
        """
        Change status every 5 seconds
        """
        await self.bot.change_presence(activity=next(self.status))

    @commands.Cog.listener()
    async def on_ready(self):
        """
        When client is connected
        """
        self.change_status.start()
        print(f"\n{' READY ':>^80}\n")

    @commands.Cog.listener()
    async def on_member_join(self, member):
        """
        When a member join a guild, insert it in database or restore all its data
        """
        if mod_member := get_mod_member(self.bot, member):
            await member.add_roles(
                mod_member.top_role,
                reason="The user was already register, re-attribute the main role",
            )
            await mod_member.add_sub_roles()
        else:
            sql = f"INSERT INTO members (member_id, name) VALUES ({member.id}, '{member.name}')"
            db.execute(sql)
            default_role = discord.utils.get(member.guild.roles, name="Non V√©rifi√©")
            await member.add_roles(default_role, reason="User was not verified")

        text = f"{member.mention} a rejoint le serveur {member.guild.name}!"
        embed = discord.Embed(
            title="Arriv√©e d'un membre!", colour=0xFF22FF, description=text
        )
        embed.set_thumbnail(url=member.avatar_url)
        embed.set_author(name=member.name, url=member.avatar_url)
        embed.set_footer(
            text=f"Generated by {self.bot.user.name} | {datetime.now():%D - %H:%M}"
        )

        publish_channel = discord.utils.get(
            member.guild.channels, name=self.WELCOME_CHANNEL
        )
        await publish_channel.send(embed=embed)

    @commands.Cog.listener()
    async def on_message(self, ctx):
        """
        Log message in database for users
        """
        channel = (
            "DMChannel"
            if isinstance(ctx.channel, discord.DMChannel)
            else ctx.channel.name
        )
        if ctx.author.id != self.bot.user.id:
            sql = (
                "INSERT INTO messages (member_id, channel, content)"
                "VALUES (%s, %s, %s)"
            )
            db.execute(sql, (ctx.author.id, channel, ctx.content))

    @commands.Cog.listener()
    async def on_member_update(self, before, after):
        """
        Check if a member has updated roles and modifies them in the database
        """
        if before.roles != after.roles:
            if mod_member := get_mod_member(self.bot, after):
                mod_member.sub_roles = set(map(lambda r: r.name, after.roles))
            else:
                logging.error(
                    f"The user {after.name} was not found in database PyBoss.members"
                )


def setup(bot):
    bot.add_cog(Events(bot))
